# Generated by Django 3.1.5 on 2021-01-13 11:05

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CnDatos',
            fields=[
                ('time', models.DateTimeField()),
                ('variable_id', models.IntegerField()),
                ('value', models.FloatField(blank=True, null=True)),
                ('validation_id', models.IntegerField()),
                ('station_id', models.IntegerField()),
                ('ref', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'cn_datos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CnNetwork',
            fields=[
                ('network_id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('network_code', models.CharField(blank=True, max_length=255, null=True)),
                ('network_name', models.CharField(blank=True, max_length=255, null=True)),
                ('network_manager', models.CharField(blank=True, max_length=255, null=True)),
                ('network_status', models.CharField(blank=True, max_length=255, null=True)),
                ('data_policy', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'cn_network',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CnStations',
            fields=[
                ('station_id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('station_name', models.CharField(blank=True, max_length=255, null=True)),
                ('station_code', models.CharField(blank=True, max_length=255, null=True)),
                ('coord_x', models.FloatField(blank=True, null=True)),
                ('coord_y', models.FloatField(blank=True, null=True)),
                ('epsg', models.IntegerField(blank=True, null=True)),
                ('munic_code', models.IntegerField(blank=True, null=True)),
                ('munic_name', models.CharField(blank=True, max_length=255, null=True)),
                ('province', models.CharField(blank=True, max_length=255, null=True)),
                ('cn_network_id', models.IntegerField(blank=True, null=True)),
                ('tipo', models.CharField(blank=True, db_column='type', max_length=255, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('elev', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('record_start', models.DateTimeField(blank=True, null=True)),
                ('record_end', models.TimeField(blank=True, null=True)),
                ('station_variables_id', models.CharField(blank=True, max_length=255, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=25830)),
            ],
            options={
                'db_table': 'cn_stations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CnVariables',
            fields=[
                ('variable_code', models.CharField(blank=True, max_length=255, primary_key=True, serialize=False)),
                ('variable_id', models.IntegerField(blank=True, null=True)),
                ('variable_name', models.CharField(blank=True, max_length=512, null=True)),
                ('variable_units', models.CharField(blank=True, max_length=255, null=True)),
                ('variable_type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'cn_variables',
                'managed': False,
            },
        ),
    ]
